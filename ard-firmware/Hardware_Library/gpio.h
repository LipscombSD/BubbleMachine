#ifndef GPIO_H_
#define GPIO_H_

#include <stdint.h>

typedef struct Gpio Gpio;

typedef enum
{
    GPIO_PORTA,
    GPIO_PORTB,
    GPIO_PORTC,
    GPIO_PORTD,
    GPIO_PORTE,
    GPIO_PORTF,
    GPIO_PORTG,
    GPIO_PORTH,
    GPIO_PORTJ,
    GPIO_PORTK

}   Gpio_port;

typedef enum
{
    GPIO_BIT0,
    GPIO_BIT1,
    GPIO_BIT2,
    GPIO_BIT3,
    GPIO_BIT4,
    GPIO_BIT5,
    GPIO_BIT6,
    GPIO_BIT7

}   Gpio_bit;

typedef enum
{
    GPIO_OUTPUT,
    GPIO_INPUT

}   Gpio_direction;

typedef enum
{
    GPIO_NORMAL,
    GPIO_ALTERNATE

}   Gpio_operation;

typedef enum
{
    GPIO_PULL_UP,
    GPIO_PULL_DOWN,
    GPIO_OPEN_DRAIN

}   Gpio_resistor;

typedef enum
{
    GPIO_PA0_U0RX,
    GPIO_PA1_U0TX,
    GPIO_PB0_U1RX,
    GPIO_PB1_U1TX,
    GPIO_PC0_TCK_SWCLK,
    GPIO_PC1_MS_SWDIO,
    GPIO_PC2_TDI,
    GPIO_PC3_TDO_SWO,
    GPIO_PC4_U4RX,
    GPIO_PC5_U4TX,
    GPIO_PC6_U3RX,
    GPIO_PC7_U3TX,
    GPIO_PD0_SSI3CLK,
    GPIO_PD1_SSI3FSS,
    GPIO_PD2_SSI3RX,
    GPIO_PD3_SSI3TX,
    GPIO_PD4_U6RX,
    GPIO_PD5_U6TX,
    GPIO_PD6_U2RX,
    GPIO_PD7_U2TX,
    GPIO_PE0_U7RX,
    GPIO_PE1_U7TX,
    GPIO_PE4_U5RX,
    GPIO_PE5_U5TX,
    GPIO_PE7_U1RI,
    GPIO_PF0_U1RTS,
    GPIO_PF1_U1CTS,
    GPIO_PF2_U1DCD,
    GPIO_PF3_U1DSR,
    GPIO_PF4_U1DTR,
    GPIO_PG4_U2RX,
    GPIO_PG5_U2TX,
    GPIO_PJ0_U4RX,
    GPIO_PJ1_U4TX,
    GPIO_PJ2_U5RX,
    GPIO_PA2_SSI0CLK,
    GPIO_PA3_SSI0FSS,
    GPIO_PA4_SSI0RX,
    GPIO_PA5_SSI0TX,
    GPIO_PB4_SSI2CLK,
    GPIO_PB5_SSI2FSS,
    GPIO_PC4_U1RX,
    GPIO_PC5_U1TX,
    GPIO_PD0_SSI1CLK,
    GPIO_PD1_SSI1FSS,
    GPIO_PD2_SSI1RX,
    GPIO_PD3_SSI1TX,
    GPIO_PF0_SSI1RX,
    GPIO_PF1_SSI1TX,
    GPIO_PF2_SSI1CLK,
    GPIO_PF3_SSI1FSS,
    GPIO_PH0_SSI3CLK,
    GPIO_PH1_SSI3FSS,
    GPIO_PH2_SSI3RX,
    GPIO_PH3_SSI3TX,
    GPIO_PH4_SSI2CLK,
    GPIO_PH5_SSI2FSS,
    GPIO_PH6_SSI2RX,
    GPIO_PH7_SSI2TX,
    GPIO_PK0_SSI3CLK,
    GPIO_PK1_SSI3FSS,
    GPIO_PK2_SSI3RX,
    GPIO_PK3_SSI3TX,
    GPIO_PA6_I2C1SCL,
    GPIO_PA7_I2C1SDA,
    GPIO_PB2_I2C0SCL,
    GPIO_PB3_I2C0SDA,
    GPIO_PD0_I2C3SCL,
    GPIO_PD1_I2C3SDA,
    GPIO_PE4_I2C2SCL,
    GPIO_PE5_I2C2SDA,
    GPIO_PF0_CAN0RX,
    GPIO_PF3_CAN0TX,
    GPIO_PF6_I2C2SCL,
    GPIO_PF7_I2C2SDA,
    GPIO_PG0_I2C3SCL,
    GPIO_PG1_I2C3SDA,
    GPIO_PG2_I2C4SCL,
    GPIO_PG3_I2C4SDA,
    GPIO_PG4_I2C1SCL,
    GPIO_PG5_I2C1SDA,
    GPIO_PG6_I2C5SCL,
    GPIO_PG7_I2C5SDA,
    GPIO_PB4_M0PWM2,
    GPIO_PB5_M0PWM3,
    GPIO_PC4_M0PWM6,
    GPIO_PC5_M0PWM7,
    GPIO_PD0_M0PWM6,
    GPIO_PD1_M0PWM7,
    GPIO_PD2_M0FAULT0,
    GPIO_PD6_M0FAULT0,
    GPIO_PD7_M0FAULT1,
    GPIO_PE4_M0PWM4,
    GPIO_PE5_M0PWM5,
    GPIO_PF2_M0FAULT0,
    GPIO_PF3_M0FAULT1,
    GPIO_PF4_M0FAULT2,
    GPIO_PF5_M0FAULT3,
    GPIO_PG2_M0FAULT1,
    GPIO_PG3_M0FAULT2,
    GPIO_PG4_M0PWM4,
    GPIO_PG5_M0PWM5,
    GPIO_PG6_M0PWM6,
    GPIO_PG7_M0PWM7,
    GPIO_PH0_M0PWM0,
    GPIO_PH1_M0PWM1,
    GPIO_PH2_M0PWM2,
    GPIO_PH3_M0PWM3,
    GPIO_PH4_M0PWM4,
    GPIO_PH5_M0PWM5,
    GPIO_PH6_M0PWM6,
    GPIO_PH7_M0PWM7,
    GPIO_PA6_M1PWM2,
    GPIO_PA7_M1PWM3,
    GPIO_PD0_M1PWM0,
    GPIO_PD1_M1PWM1,
    GPIO_PE4_M1PWM2,
    GPIO_PE5_M1PWM3,
    GPIO_PF0_M1PWM4,
    GPIO_PF1_M1PWM5,
    GPIO_PF2_M1PWM6,
    GPIO_PF3_M1PWM7,
    GPIO_PF4_M1FAULT0,
    GPIO_PF7_M1FAULT0,
    GPIO_PG0_M1FAULT1,
    GPIO_PG1_M1FAULT2,
    GPIO_PG2_M1PWM0,
    GPIO_PG3_M1PWM1,
    GPIO_PG4_M1PWM2,
    GPIO_PG5_M1PWM3,
    GPIO_PG7_IDX1,
    GPIO_PH1_IDX0,
    GPIO_PH4_PHA0,
    GPIO_PH5_PHB0,
    GPIO_PJ2_IDX0,
    GPIO_PC4_IDX1,
    GPIO_PC5_PHA1,
    GPIO_PC6_PHB1,
    GPIO_PD3_IDX0,
    GPIO_PD6_PHA0,
    GPIO_PD7_PHB0,
    GPIO_PF0_PHA0,
    GPIO_PF1_PHB0,
    GPIO_PF4_IDX0,
    GPIO_PG0_PHA1,
    GPIO_PG1_PHB1,
    GPIO_PG3_PHA1,
    GPIO_PG4_PHB1,
    GPIO_PG5_IDX1,
    GPIO_PH0_M0FAULT0,
    GPIO_PH1_M0FAULT1,
    GPIO_PH2_M0FAULT2,
    GPIO_PH3_M0FAULT3,
    GPIO_PK0_M1FAULT0,
    GPIO_PK1_M1FAULT1,
    GPIO_PK2_M1FAULT2,
    GPIO_PK3_M1FAULT3,
    GPIO_PB0_T2CCP0,
    GPIO_PB1_T2CCP1,
    GPIO_PB2_T3CCP0,
    GPIO_PB3_T3CCP1,
    GPIO_PB4_T1CCP0,
    GPIO_PB5_T1CCP1,
    GPIO_PC0_T4CCP0,
    GPIO_PC1_T4CCP1,
    GPIO_PC2_T5CCP0,
    GPIO_PC3_T5CCP1,
    GPIO_PC4_WT0CCP0,
    GPIO_PC5_WT0CCP1,
    GPIO_PC6_WT1CCP0,
    GPIO_PC7_WT1CCP1,
    GPIO_PD0_WT2CCP0,
    GPIO_PD1_WT2CCP1,
    GPIO_PD2_WT3CCP0,
    GPIO_PD3_WT3CCP1,
    GPIO_PD4_WT4CCP0,
    GPIO_PD5_WT4CCP1,
    GPIO_PD6_WT5CCP0,
    GPIO_PD7_WT5CCP1,
    GPIO_PF0_T0CCP0,
    GPIO_PF1_T0CCP1,
    GPIO_PF2_T1CCP0,
    GPIO_PF3_T1CCP1,
    GPIO_PF4_T2CCP0,
    GPIO_PF5_T2CCP1,
    GPIO_PF6_T3CCP0,
    GPIO_PF7_T3CCP1,
    GPIO_PG0_T4CCP0,
    GPIO_PG1_T4CCP1,
    GPIO_PG2_T5CCP0,
    GPIO_PG3_T5CCP1,
    GPIO_PG4_WT0CCP0,
    GPIO_PG5_WT0CCP1,
    GPIO_PG6_WT1CCP0,
    GPIO_PG7_WT1CCP1,
    GPIO_PH0_WT2CCP0,
    GPIO_PH1_WT2CCP1,
    GPIO_PH2_WT5CCP0,
    GPIO_PH3_WT5CCP1,
    GPIO_PH4_WT3CCP0,
    GPIO_PH5_WT3CCP1,
    GPIO_PH6_WT4CCP0,
    GPIO_PH7_WT4CCP1,
    GPIO_PJ0_T1CCP0,
    GPIO_PJ1_T1CCP1,
    GPIO_PJ2_T2CCP0,
    GPIO_PA0_CAN1RX,
    GPIO_PA1_CAN1TX,
    GPIO_PB4_CAN0RX,
    GPIO_PB5_CAN0TX,
    GPIO_PC4_U1RTS,
    GPIO_PC5_U1CTS,
    GPIO_PC6_USB0EPEN,
    GPIO_PC7_USB0PFLT,
    GPIO_PD2_USB0EPEN,
    GPIO_PD3_USB0PFLT,
    GPIO_PD7_NMI,
    GPIO_PE4_CAN0RX,
    GPIO_PE5_CAN0TX,
    GPIO_PE6_CAN1RX,
    GPIO_PE7_CAN1TX,
    GPIO_PF0_NMI,
    GPIO_PF4_USB0EPEN,
    GPIO_PF5_USB0PFLT,
    GPIO_PG4_USB0EPEN,
    GPIO_PG5_USB0PFLT,
    GPIO_PF0_C0O,
    GPIO_PF1_C1O,
    GPIO_PF2_C2O,
    GPIO_PF0_TRD2,
    GPIO_PF1_TRD1,
    GPIO_PF2_TRD0,
    GPIO_PF3_TRCLK,
    GPIO_PF4_TRD3

}   Gpio_function;

Gpio *gpio_address(Gpio_port port);

void gpio_unlock(Gpio *gpio, Gpio_bit bit);

void gpio_set_direction(Gpio *gpio, Gpio_bit bit, Gpio_direction direction);

void gpio_set_operation(Gpio *gpio, Gpio_bit bit, Gpio_operation operation);

void gpio_set_resistor(Gpio *gpio, Gpio_bit bit, Gpio_resistor resistor);

void gpio_set_function(Gpio *gpio, Gpio_bit bit, Gpio_function function);

void gpio_enable_digital(Gpio *gpio, Gpio_bit bit);

void gpio_enable_analog(Gpio *gpio, Gpio_bit bit);

void gpio_write_high(Gpio *gpio, Gpio_bit bit);

void gpio_write_low(Gpio *gpio, Gpio_bit bit);

void gpio_write_toggle(Gpio *gpio, Gpio_bit bit);

uint32_t gpio_read(Gpio *gpio);

#endif /* GPIO_H_ */
